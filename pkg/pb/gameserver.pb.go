// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: gameserver.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EquipmentItemType int32

const (
	EquipmentItemType_HELMET EquipmentItemType = 0
	EquipmentItemType_ARMOR  EquipmentItemType = 1
	EquipmentItemType_WEAPON EquipmentItemType = 2
)

// Enum value maps for EquipmentItemType.
var (
	EquipmentItemType_name = map[int32]string{
		0: "HELMET",
		1: "ARMOR",
		2: "WEAPON",
	}
	EquipmentItemType_value = map[string]int32{
		"HELMET": 0,
		"ARMOR":  1,
		"WEAPON": 2,
	}
)

func (x EquipmentItemType) Enum() *EquipmentItemType {
	p := new(EquipmentItemType)
	*p = x
	return p
}

func (x EquipmentItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EquipmentItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_gameserver_proto_enumTypes[0].Descriptor()
}

func (EquipmentItemType) Type() protoreflect.EnumType {
	return &file_gameserver_proto_enumTypes[0]
}

func (x EquipmentItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EquipmentItemType.Descriptor instead.
func (EquipmentItemType) EnumDescriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{0}
}

type EquipmentItemRarity int32

const (
	EquipmentItemRarity_DEFAULT   EquipmentItemRarity = 0
	EquipmentItemRarity_COMMON    EquipmentItemRarity = 1
	EquipmentItemRarity_UNCOMMON  EquipmentItemRarity = 2
	EquipmentItemRarity_RARE      EquipmentItemRarity = 3
	EquipmentItemRarity_EPIC      EquipmentItemRarity = 4
	EquipmentItemRarity_LEGENDARY EquipmentItemRarity = 5
)

// Enum value maps for EquipmentItemRarity.
var (
	EquipmentItemRarity_name = map[int32]string{
		0: "DEFAULT",
		1: "COMMON",
		2: "UNCOMMON",
		3: "RARE",
		4: "EPIC",
		5: "LEGENDARY",
	}
	EquipmentItemRarity_value = map[string]int32{
		"DEFAULT":   0,
		"COMMON":    1,
		"UNCOMMON":  2,
		"RARE":      3,
		"EPIC":      4,
		"LEGENDARY": 5,
	}
)

func (x EquipmentItemRarity) Enum() *EquipmentItemRarity {
	p := new(EquipmentItemRarity)
	*p = x
	return p
}

func (x EquipmentItemRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EquipmentItemRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_gameserver_proto_enumTypes[1].Descriptor()
}

func (EquipmentItemRarity) Type() protoreflect.EnumType {
	return &file_gameserver_proto_enumTypes[1]
}

func (x EquipmentItemRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EquipmentItemRarity.Descriptor instead.
func (EquipmentItemRarity) EnumDescriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{1}
}

type NotificationType int32

const (
	NotificationType_CONNECT    NotificationType = 0
	NotificationType_DISCONNECT NotificationType = 1
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "CONNECT",
		1: "DISCONNECT",
	}
	NotificationType_value = map[string]int32{
		"CONNECT":    0,
		"DISCONNECT": 1,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_gameserver_proto_enumTypes[2].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_gameserver_proto_enumTypes[2]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{2}
}

type ServerNotificationType int32

const (
	ServerNotificationType_PLAYER_CONNECTED    ServerNotificationType = 0
	ServerNotificationType_PLAYER_DISCONNECTED ServerNotificationType = 1
	ServerNotificationType_PLAYER_KILLED       ServerNotificationType = 2
	ServerNotificationType_PLAYER_ATTACKED     ServerNotificationType = 3
)

// Enum value maps for ServerNotificationType.
var (
	ServerNotificationType_name = map[int32]string{
		0: "PLAYER_CONNECTED",
		1: "PLAYER_DISCONNECTED",
		2: "PLAYER_KILLED",
		3: "PLAYER_ATTACKED",
	}
	ServerNotificationType_value = map[string]int32{
		"PLAYER_CONNECTED":    0,
		"PLAYER_DISCONNECTED": 1,
		"PLAYER_KILLED":       2,
		"PLAYER_ATTACKED":     3,
	}
)

func (x ServerNotificationType) Enum() *ServerNotificationType {
	p := new(ServerNotificationType)
	*p = x
	return p
}

func (x ServerNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_gameserver_proto_enumTypes[3].Descriptor()
}

func (ServerNotificationType) Type() protoreflect.EnumType {
	return &file_gameserver_proto_enumTypes[3]
}

func (x ServerNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerNotificationType.Descriptor instead.
func (ServerNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{3}
}

type WeaponCharacteristics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackPower    int32   `protobuf:"varint,1,opt,name=attack_power,json=attackPower,proto3" json:"attack_power,omitempty"`
	Range          float32 `protobuf:"fixed32,2,opt,name=range,proto3" json:"range,omitempty"`
	AttackCone     float32 `protobuf:"fixed32,3,opt,name=attack_cone,json=attackCone,proto3" json:"attack_cone,omitempty"`
	KnockbackPower float32 `protobuf:"fixed32,4,opt,name=knockback_power,json=knockbackPower,proto3" json:"knockback_power,omitempty"`
}

func (x *WeaponCharacteristics) Reset() {
	*x = WeaponCharacteristics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponCharacteristics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponCharacteristics) ProtoMessage() {}

func (x *WeaponCharacteristics) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponCharacteristics.ProtoReflect.Descriptor instead.
func (*WeaponCharacteristics) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{0}
}

func (x *WeaponCharacteristics) GetAttackPower() int32 {
	if x != nil {
		return x.AttackPower
	}
	return 0
}

func (x *WeaponCharacteristics) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *WeaponCharacteristics) GetAttackCone() float32 {
	if x != nil {
		return x.AttackCone
	}
	return 0
}

func (x *WeaponCharacteristics) GetKnockbackPower() float32 {
	if x != nil {
		return x.KnockbackPower
	}
	return 0
}

type EquipmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   EquipmentItemType   `protobuf:"varint,1,opt,name=type,proto3,enum=gameserver.EquipmentItemType" json:"type,omitempty"`
	Rarity EquipmentItemRarity `protobuf:"varint,2,opt,name=rarity,proto3,enum=gameserver.EquipmentItemRarity" json:"rarity,omitempty"`
	// Types that are assignable to Characteristics:
	//	*EquipmentItem_WeaponChars
	//	*EquipmentItem_HpBuff
	//	*EquipmentItem_DamageReduction
	Characteristics isEquipmentItem_Characteristics `protobuf_oneof:"characteristics"`
	ItemId          int32                           `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *EquipmentItem) Reset() {
	*x = EquipmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentItem) ProtoMessage() {}

func (x *EquipmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentItem.ProtoReflect.Descriptor instead.
func (*EquipmentItem) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{1}
}

func (x *EquipmentItem) GetType() EquipmentItemType {
	if x != nil {
		return x.Type
	}
	return EquipmentItemType_HELMET
}

func (x *EquipmentItem) GetRarity() EquipmentItemRarity {
	if x != nil {
		return x.Rarity
	}
	return EquipmentItemRarity_DEFAULT
}

func (m *EquipmentItem) GetCharacteristics() isEquipmentItem_Characteristics {
	if m != nil {
		return m.Characteristics
	}
	return nil
}

func (x *EquipmentItem) GetWeaponChars() *WeaponCharacteristics {
	if x, ok := x.GetCharacteristics().(*EquipmentItem_WeaponChars); ok {
		return x.WeaponChars
	}
	return nil
}

func (x *EquipmentItem) GetHpBuff() int32 {
	if x, ok := x.GetCharacteristics().(*EquipmentItem_HpBuff); ok {
		return x.HpBuff
	}
	return 0
}

func (x *EquipmentItem) GetDamageReduction() int32 {
	if x, ok := x.GetCharacteristics().(*EquipmentItem_DamageReduction); ok {
		return x.DamageReduction
	}
	return 0
}

func (x *EquipmentItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type isEquipmentItem_Characteristics interface {
	isEquipmentItem_Characteristics()
}

type EquipmentItem_WeaponChars struct {
	WeaponChars *WeaponCharacteristics `protobuf:"bytes,3,opt,name=weapon_chars,json=weaponChars,proto3,oneof"`
}

type EquipmentItem_HpBuff struct {
	HpBuff int32 `protobuf:"varint,4,opt,name=hp_buff,json=hpBuff,proto3,oneof"`
}

type EquipmentItem_DamageReduction struct {
	DamageReduction int32 `protobuf:"varint,5,opt,name=damage_reduction,json=damageReduction,proto3,oneof"`
}

func (*EquipmentItem_WeaponChars) isEquipmentItem_Characteristics() {}

func (*EquipmentItem_HpBuff) isEquipmentItem_Characteristics() {}

func (*EquipmentItem_DamageReduction) isEquipmentItem_Characteristics() {}

type DroppedEquipmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector        `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Item     *EquipmentItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *DroppedEquipmentItem) Reset() {
	*x = DroppedEquipmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DroppedEquipmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedEquipmentItem) ProtoMessage() {}

func (x *DroppedEquipmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedEquipmentItem.ProtoReflect.Descriptor instead.
func (*DroppedEquipmentItem) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{2}
}

func (x *DroppedEquipmentItem) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *DroppedEquipmentItem) GetItem() *EquipmentItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type PlayerEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Helmet *EquipmentItem `protobuf:"bytes,1,opt,name=helmet,proto3" json:"helmet,omitempty"`
	Armor  *EquipmentItem `protobuf:"bytes,2,opt,name=armor,proto3" json:"armor,omitempty"`
	Weapon *EquipmentItem `protobuf:"bytes,3,opt,name=weapon,proto3" json:"weapon,omitempty"`
}

func (x *PlayerEquipment) Reset() {
	*x = PlayerEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEquipment) ProtoMessage() {}

func (x *PlayerEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEquipment.ProtoReflect.Descriptor instead.
func (*PlayerEquipment) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerEquipment) GetHelmet() *EquipmentItem {
	if x != nil {
		return x.Helmet
	}
	return nil
}

func (x *PlayerEquipment) GetArmor() *EquipmentItem {
	if x != nil {
		return x.Armor
	}
	return nil
}

func (x *PlayerEquipment) GetWeapon() *EquipmentItem {
	if x != nil {
		return x.Weapon
	}
	return nil
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{4}
}

func (x *Vector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PlayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage int32 `protobuf:"varint,1,opt,name=damage,proto3" json:"damage,omitempty"`
	Kills  int32 `protobuf:"varint,2,opt,name=kills,proto3" json:"kills,omitempty"`
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerStats) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *PlayerStats) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname  string           `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Hp        int32            `protobuf:"varint,2,opt,name=hp,proto3" json:"hp,omitempty"`
	Equipment *PlayerEquipment `protobuf:"bytes,3,opt,name=equipment,proto3" json:"equipment,omitempty"`
	UserId    string           `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Position  *Vector          `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Angle     float32          `protobuf:"fixed32,6,opt,name=angle,proto3" json:"angle,omitempty"`
	PlayerId  int32            `protobuf:"varint,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Stats     *PlayerStats     `protobuf:"bytes,8,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{6}
}

func (x *Player) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Player) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Player) GetEquipment() *PlayerEquipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *Player) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Player) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Player) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *Player) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Player) GetStats() *PlayerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players      []*Player               `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	DroppedItems []*DroppedEquipmentItem `protobuf:"bytes,2,rep,name=dropped_items,json=droppedItems,proto3" json:"dropped_items,omitempty"`
	PlayersLeft  int32                   `protobuf:"varint,3,opt,name=players_left,json=playersLeft,proto3" json:"players_left,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{7}
}

func (x *GameState) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetDroppedItems() []*DroppedEquipmentItem {
	if x != nil {
		return x.DroppedItems
	}
	return nil
}

func (x *GameState) GetPlayersLeft() int32 {
	if x != nil {
		return x.PlayersLeft
	}
	return 0
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*Action_Move
	//	*Action_Attack
	//	*Action_PickUp
	//	*Action_Drop
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{8}
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetMove() *MovementAction {
	if x, ok := x.GetAction().(*Action_Move); ok {
		return x.Move
	}
	return nil
}

func (x *Action) GetAttack() *AttackAction {
	if x, ok := x.GetAction().(*Action_Attack); ok {
		return x.Attack
	}
	return nil
}

func (x *Action) GetPickUp() *PickUpAction {
	if x, ok := x.GetAction().(*Action_PickUp); ok {
		return x.PickUp
	}
	return nil
}

func (x *Action) GetDrop() *DropAction {
	if x, ok := x.GetAction().(*Action_Drop); ok {
		return x.Drop
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_Move struct {
	Move *MovementAction `protobuf:"bytes,1,opt,name=move,proto3,oneof"`
}

type Action_Attack struct {
	Attack *AttackAction `protobuf:"bytes,2,opt,name=attack,proto3,oneof"`
}

type Action_PickUp struct {
	PickUp *PickUpAction `protobuf:"bytes,3,opt,name=pick_up,json=pickUp,proto3,oneof"`
}

type Action_Drop struct {
	Drop *DropAction `protobuf:"bytes,4,opt,name=drop,proto3,oneof"`
}

func (*Action_Move) isAction_Action() {}

func (*Action_Attack) isAction_Action() {}

func (*Action_PickUp) isAction_Action() {}

func (*Action_Drop) isAction_Action() {}

type MovementAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shift *Vector `protobuf:"bytes,1,opt,name=shift,proto3" json:"shift,omitempty"`
	Angle float32 `protobuf:"fixed32,2,opt,name=angle,proto3" json:"angle,omitempty"`
}

func (x *MovementAction) Reset() {
	*x = MovementAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementAction) ProtoMessage() {}

func (x *MovementAction) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementAction.ProtoReflect.Descriptor instead.
func (*MovementAction) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{9}
}

func (x *MovementAction) GetShift() *Vector {
	if x != nil {
		return x.Shift
	}
	return nil
}

func (x *MovementAction) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type PickUpAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *PickUpAction) Reset() {
	*x = PickUpAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickUpAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickUpAction) ProtoMessage() {}

func (x *PickUpAction) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickUpAction.ProtoReflect.Descriptor instead.
func (*PickUpAction) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{10}
}

func (x *PickUpAction) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DropAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot EquipmentItemType `protobuf:"varint,1,opt,name=slot,proto3,enum=gameserver.EquipmentItemType" json:"slot,omitempty"`
}

func (x *DropAction) Reset() {
	*x = DropAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAction) ProtoMessage() {}

func (x *DropAction) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAction.ProtoReflect.Descriptor instead.
func (*DropAction) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{11}
}

func (x *DropAction) GetSlot() EquipmentItemType {
	if x != nil {
		return x.Slot
	}
	return EquipmentItemType_HELMET
}

type AttackAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttackAction) Reset() {
	*x = AttackAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackAction) ProtoMessage() {}

func (x *AttackAction) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackAction.ProtoReflect.Descriptor instead.
func (*AttackAction) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{12}
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LocalTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	Nickname  string               `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{13}
}

func (x *ConnectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectRequest) GetLocalTime() *timestamp.Timestamp {
	if x != nil {
		return x.LocalTime
	}
	return nil
}

func (x *ConnectRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping       int32                `protobuf:"varint,1,opt,name=ping,proto3" json:"ping,omitempty"`
	Token      string               `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ServerTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{14}
}

func (x *ConnectResponse) GetPing() int32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *ConnectResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectResponse) GetServerTime() *timestamp.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type NotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=gameserver.NotificationType" json:"type,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{15}
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_CONNECT
}

type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*ClientMessage_Action
	//	*ClientMessage_Notification
	Message isClientMessage_Message `protobuf_oneof:"message"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{16}
}

func (m *ClientMessage) GetMessage() isClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ClientMessage) GetAction() *Action {
	if x, ok := x.GetMessage().(*ClientMessage_Action); ok {
		return x.Action
	}
	return nil
}

func (x *ClientMessage) GetNotification() *Notification {
	if x, ok := x.GetMessage().(*ClientMessage_Notification); ok {
		return x.Notification
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Action struct {
	Action *Action `protobuf:"bytes,1,opt,name=action,proto3,oneof"`
}

type ClientMessage_Notification struct {
	Notification *Notification `protobuf:"bytes,2,opt,name=notification,proto3,oneof"`
}

func (*ClientMessage_Action) isClientMessage_Message() {}

func (*ClientMessage_Notification) isClientMessage_Message() {}

type ServerNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     ServerNotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=gameserver.ServerNotificationType" json:"type,omitempty"`
	Actor    string                 `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	Receiver string                 `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *ServerNotification) Reset() {
	*x = ServerNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNotification) ProtoMessage() {}

func (x *ServerNotification) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNotification.ProtoReflect.Descriptor instead.
func (*ServerNotification) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{17}
}

func (x *ServerNotification) GetType() ServerNotificationType {
	if x != nil {
		return x.Type
	}
	return ServerNotificationType_PLAYER_CONNECTED
}

func (x *ServerNotification) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *ServerNotification) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//	*ServerResponse_Notification
	//	*ServerResponse_GameState
	Info       isServerResponse_Info `protobuf_oneof:"info"`
	ServerTime *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
}

func (x *ServerResponse) Reset() {
	*x = ServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResponse) ProtoMessage() {}

func (x *ServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResponse.ProtoReflect.Descriptor instead.
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return file_gameserver_proto_rawDescGZIP(), []int{18}
}

func (m *ServerResponse) GetInfo() isServerResponse_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *ServerResponse) GetNotification() *ServerNotification {
	if x, ok := x.GetInfo().(*ServerResponse_Notification); ok {
		return x.Notification
	}
	return nil
}

func (x *ServerResponse) GetGameState() *GameState {
	if x, ok := x.GetInfo().(*ServerResponse_GameState); ok {
		return x.GameState
	}
	return nil
}

func (x *ServerResponse) GetServerTime() *timestamp.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

type isServerResponse_Info interface {
	isServerResponse_Info()
}

type ServerResponse_Notification struct {
	Notification *ServerNotification `protobuf:"bytes,1,opt,name=notification,proto3,oneof"`
}

type ServerResponse_GameState struct {
	GameState *GameState `protobuf:"bytes,2,opt,name=game_state,json=gameState,proto3,oneof"`
}

func (*ServerResponse_Notification) isServerResponse_Info() {}

func (*ServerResponse_GameState) isServerResponse_Info() {}

var File_gameserver_proto protoreflect.FileDescriptor

var file_gameserver_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9a, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6b, 0x6e, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6b, 0x6e,
	0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0xb7, 0x02, 0x0a,
	0x0d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x31,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x77, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x72, 0x73, 0x12, 0x19, 0x0a, 0x07, 0x68, 0x70, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x68, 0x70, 0x42, 0x75, 0x66, 0x66, 0x12, 0x2b, 0x0a,
	0x10, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x75, 0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xa8, 0x01,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x68, 0x65,
	0x6c, 0x6d, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x61, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x3b,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x68, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x22, 0xdb,
	0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x33, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x70, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x72, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x0e,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x27,
	0x0a, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x2a, 0x36, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x48, 0x45, 0x4c, 0x4d, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x4d,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x02,
	0x2a, 0x5f, 0x0a, 0x13, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x52, 0x41, 0x52, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x50, 0x49, 0x43,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x10,
	0x05, 0x2a, 0x2f, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x10, 0x01, 0x2a, 0x6f, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x03, 0x32, 0x98, 0x01, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1a,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x54, 0x61, 0x6c,
	0x6b, 0x12, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x69,
	0x6b, 0x68, 0x61, 0x69, 0x6c, 0x61, 0x75, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x65, 0x76, 0x61, 0x6c,
	0x2d, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gameserver_proto_rawDescOnce sync.Once
	file_gameserver_proto_rawDescData = file_gameserver_proto_rawDesc
)

func file_gameserver_proto_rawDescGZIP() []byte {
	file_gameserver_proto_rawDescOnce.Do(func() {
		file_gameserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_gameserver_proto_rawDescData)
	})
	return file_gameserver_proto_rawDescData
}

var file_gameserver_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_gameserver_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_gameserver_proto_goTypes = []interface{}{
	(EquipmentItemType)(0),        // 0: gameserver.EquipmentItemType
	(EquipmentItemRarity)(0),      // 1: gameserver.EquipmentItemRarity
	(NotificationType)(0),         // 2: gameserver.NotificationType
	(ServerNotificationType)(0),   // 3: gameserver.ServerNotificationType
	(*WeaponCharacteristics)(nil), // 4: gameserver.WeaponCharacteristics
	(*EquipmentItem)(nil),         // 5: gameserver.EquipmentItem
	(*DroppedEquipmentItem)(nil),  // 6: gameserver.DroppedEquipmentItem
	(*PlayerEquipment)(nil),       // 7: gameserver.PlayerEquipment
	(*Vector)(nil),                // 8: gameserver.Vector
	(*PlayerStats)(nil),           // 9: gameserver.PlayerStats
	(*Player)(nil),                // 10: gameserver.Player
	(*GameState)(nil),             // 11: gameserver.GameState
	(*Action)(nil),                // 12: gameserver.Action
	(*MovementAction)(nil),        // 13: gameserver.MovementAction
	(*PickUpAction)(nil),          // 14: gameserver.PickUpAction
	(*DropAction)(nil),            // 15: gameserver.DropAction
	(*AttackAction)(nil),          // 16: gameserver.AttackAction
	(*ConnectRequest)(nil),        // 17: gameserver.ConnectRequest
	(*ConnectResponse)(nil),       // 18: gameserver.ConnectResponse
	(*Notification)(nil),          // 19: gameserver.Notification
	(*ClientMessage)(nil),         // 20: gameserver.ClientMessage
	(*ServerNotification)(nil),    // 21: gameserver.ServerNotification
	(*ServerResponse)(nil),        // 22: gameserver.ServerResponse
	(*timestamp.Timestamp)(nil),   // 23: google.protobuf.Timestamp
}
var file_gameserver_proto_depIdxs = []int32{
	0,  // 0: gameserver.EquipmentItem.type:type_name -> gameserver.EquipmentItemType
	1,  // 1: gameserver.EquipmentItem.rarity:type_name -> gameserver.EquipmentItemRarity
	4,  // 2: gameserver.EquipmentItem.weapon_chars:type_name -> gameserver.WeaponCharacteristics
	8,  // 3: gameserver.DroppedEquipmentItem.position:type_name -> gameserver.Vector
	5,  // 4: gameserver.DroppedEquipmentItem.item:type_name -> gameserver.EquipmentItem
	5,  // 5: gameserver.PlayerEquipment.helmet:type_name -> gameserver.EquipmentItem
	5,  // 6: gameserver.PlayerEquipment.armor:type_name -> gameserver.EquipmentItem
	5,  // 7: gameserver.PlayerEquipment.weapon:type_name -> gameserver.EquipmentItem
	7,  // 8: gameserver.Player.equipment:type_name -> gameserver.PlayerEquipment
	8,  // 9: gameserver.Player.position:type_name -> gameserver.Vector
	9,  // 10: gameserver.Player.stats:type_name -> gameserver.PlayerStats
	10, // 11: gameserver.GameState.players:type_name -> gameserver.Player
	6,  // 12: gameserver.GameState.dropped_items:type_name -> gameserver.DroppedEquipmentItem
	13, // 13: gameserver.Action.move:type_name -> gameserver.MovementAction
	16, // 14: gameserver.Action.attack:type_name -> gameserver.AttackAction
	14, // 15: gameserver.Action.pick_up:type_name -> gameserver.PickUpAction
	15, // 16: gameserver.Action.drop:type_name -> gameserver.DropAction
	8,  // 17: gameserver.MovementAction.shift:type_name -> gameserver.Vector
	0,  // 18: gameserver.DropAction.slot:type_name -> gameserver.EquipmentItemType
	23, // 19: gameserver.ConnectRequest.local_time:type_name -> google.protobuf.Timestamp
	23, // 20: gameserver.ConnectResponse.server_time:type_name -> google.protobuf.Timestamp
	2,  // 21: gameserver.Notification.type:type_name -> gameserver.NotificationType
	12, // 22: gameserver.ClientMessage.action:type_name -> gameserver.Action
	19, // 23: gameserver.ClientMessage.notification:type_name -> gameserver.Notification
	3,  // 24: gameserver.ServerNotification.type:type_name -> gameserver.ServerNotificationType
	21, // 25: gameserver.ServerResponse.notification:type_name -> gameserver.ServerNotification
	11, // 26: gameserver.ServerResponse.game_state:type_name -> gameserver.GameState
	23, // 27: gameserver.ServerResponse.server_time:type_name -> google.protobuf.Timestamp
	17, // 28: gameserver.GameManager.Connect:input_type -> gameserver.ConnectRequest
	20, // 29: gameserver.GameManager.Talk:input_type -> gameserver.ClientMessage
	18, // 30: gameserver.GameManager.Connect:output_type -> gameserver.ConnectResponse
	22, // 31: gameserver.GameManager.Talk:output_type -> gameserver.ServerResponse
	30, // [30:32] is the sub-list for method output_type
	28, // [28:30] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_gameserver_proto_init() }
func file_gameserver_proto_init() {
	if File_gameserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gameserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponCharacteristics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DroppedEquipmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovementAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickUpAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gameserver_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EquipmentItem_WeaponChars)(nil),
		(*EquipmentItem_HpBuff)(nil),
		(*EquipmentItem_DamageReduction)(nil),
	}
	file_gameserver_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Action_Move)(nil),
		(*Action_Attack)(nil),
		(*Action_PickUp)(nil),
		(*Action_Drop)(nil),
	}
	file_gameserver_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ClientMessage_Action)(nil),
		(*ClientMessage_Notification)(nil),
	}
	file_gameserver_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ServerResponse_Notification)(nil),
		(*ServerResponse_GameState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gameserver_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gameserver_proto_goTypes,
		DependencyIndexes: file_gameserver_proto_depIdxs,
		EnumInfos:         file_gameserver_proto_enumTypes,
		MessageInfos:      file_gameserver_proto_msgTypes,
	}.Build()
	File_gameserver_proto = out.File
	file_gameserver_proto_rawDesc = nil
	file_gameserver_proto_goTypes = nil
	file_gameserver_proto_depIdxs = nil
}
